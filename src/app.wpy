<style lang="less">
@import './zanui/index.wxss';
@import 'assets/styles/weui.wxss';
@import 'assets/styles/app.less';
page {
  height: 100%;
  background-color: #efeff4;
}

.container {
  width: 100%;
}
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'

import { setStore } from 'wepy-redux'
import configStore from './store'
const store = configStore()
setStore(store)

export default class extends wepy.app {
  config = {
    pages: [
      'pages/bookstore',
      'pages/free',
      'pages/recharge',
      'pages/books',
      'pages/mine',
      'pages/xiaoshuo-cover'
    ],
    window: {
      backgroundColor: '#fff',
      backgroundTextStyle: 'black',
      navigationBarBackgroundColor: '#fff',
      navigationBarTitleText: '梦幻九天书阁',
      navigationBarTextStyle: 'black'
    },
    tabBar: {
      color: '#929292',
      selectedColor: '#77a9fd',
      backgroundColor: '#f7f7f8',
      borderStyle: 'white',
      list: [
        {
          pagePath: 'pages/bookstore',
          text: '书城',
          iconPath: 'assets/images/tabnav/tab-library_ico.png',
          selectedIconPath: 'assets/images/tabnav/tab-library_ico-h.png'
        },
        {
          pagePath: 'pages/free',
          text: '限免',
          iconPath: 'assets/images/tabnav/tab-free_ico.png',
          selectedIconPath: 'assets/images/tabnav/tab-free_ico-h.png'
        },
        {
          pagePath: 'pages/recharge',
          text: '充值',
          iconPath: 'assets/images/tabnav/tab-found_ico.png',
          selectedIconPath: 'assets/images/tabnav/tab-found_ico-h.png'
        },
        {
          pagePath: 'pages/books',
          text: '书库',
          iconPath: 'assets/images/tabnav/tab-small-library_ico.png',
          selectedIconPath: 'assets/images/tabnav/tab-small-library_ico-h.png'
        },
        {
          pagePath: 'pages/mine',
          text: '我的',
          iconPath: 'assets/images/tabnav/tab-my_ico.png',
          selectedIconPath: 'assets/images/tabnav/tab-my_ico-h.png'
        }
      ]
    }
  }

  globalData = {
    userInfo: null
  }

  constructor() {
    super()
    this.use('requestfix')
    this.use('promisify')
  }

  onLaunch() {
    this.testAsync()
  }

  sleep(s) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        resolve('promise resolved')
      }, s * 1000)
    })
  }

  async testAsync() {
    const data = await this.sleep(3)
    console.log(data)
  }

  getUserInfo(cb) {
    const that = this
    if (this.globalData.userInfo) {
      return this.globalData.userInfo
    }
    wepy.getUserInfo({
      success(res) {
        that.globalData.userInfo = res.userInfo
        cb && cb(res.userInfo)
      }
    })
  }
}
</script>
